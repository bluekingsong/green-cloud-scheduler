#!/usr/bin/env python
# vim: tabstop=4 shiftwidth=4 softtabstop=4
#
# Copyright 2012 Sina Corporation
# All Rights Reserved.
# Author: YuWei Peng <pengyuwei@gmail.com>
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

import json
import sys
import time
import signal
import zmq
import logging
import ConfigParser

from kanyun.common.const import *
from kanyun.worker.worker import *

running = True


def SignalHandler(sig, id):
    global running
    
    if sig == signal.SIGUSR1:
        running = False
    elif sig == signal.SIGUSR2:
        pass
    elif sig == signal.SIGINT:
        print 'Waiting for quit...'
        running = False


def register_signal():
    signal.signal(signal.SIGUSR1, SignalHandler)
    signal.signal(signal.SIGUSR2, SignalHandler)
    signal.signal(signal.SIGINT, SignalHandler)


def main():
    global running
    if len(sys.argv) == 2 and sys.argv[1] == '--help':
        print 'usage:\nuse speical id: worker <id>\nuse id in config file: worker'
        return
    
    wid = None
    if len(sys.argv) == 2:
        if len(sys.argv[1]) > 16:
            print 'Invalid worker id.'
            return
        wid = sys.argv[1]
    
    register_signal()
    worker = Worker(worker_id=wid)
    # TODO: the plugin come form configure file maybe better
    worker.register_plugin(plugin_heartbeat)
    worker.register_plugin(plugin_agent_info)
    #change by lanjinsong
    #worker.register_plugin(plugin_traffic_accounting_info)

    print "Starting worker..."
    print "id=%s" % (worker.worker_id)

    while running:
        time.sleep(worker.working_rate/1000)
        
        if not running:
            break
            
        # push the info data to data-server
        worker.info_push()
        
if __name__ == '__main__':
    main()
